/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <6>; // Assuming 6 LEDs per side for underglow
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

/ {
    behaviors {
        encoder_ug_brightness: encoder_ug_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
        encoder_ug_hue: encoder_ug_hue {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |
            bindings = <
&kp ESC   &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W     &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O    &kp P    &kp MINUS
&kp LSHFT &kp A  &kp S     &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X     &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LSHFT &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp RET  &mo 2  &kp BSPC &kp RCTRL &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                  &trans     &trans    &kp PIPE  &trans    &kp K_UNDO &kp K_REDO
&kp LBKT   &kp RBKT         &kp EXCL          &kp AT            &kp HASH     &kp LMETA(F6)                 &kp LBKT   &kp RBKT  &kp EXCL  &kp AT    &kp HASH   &trans 
&kp CARET  &kp BSLH         &kp STAR          &kp LPAR          &kp RPAR     &kp PRCNT                     &kp CARET  &kp BSLH  &kp STAR  &kp LPAR  &kp RPAR   &trans
&kp LCTRL  &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &kp F23   &kp F24   &kp DOLLAR &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE  &kp LMETA(NUBS)
                            &kp LSHFT         &kp LALT          &kp LGUI     &mo 1     &kp SPACE &kp RET   &mo 2      &kp BSPC  &kp DEL   &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_AC_ZOOM_OUT C_AC_ZOOM_IN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |   <-  |   v   |  ^   |  ->   |      |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp LG(TAB) &kp LG(LS(TAB)) &kp N2 &kp N3     &kp N4     &kp N5                                   &trans      &trans     &trans    &trans    &kp LC(LS(TAB)) &kp LC(TAB)
&kp TAB     &kp Q           &kp W  &kp KP_N7  &kp KP_N8  &kp KP_N9                                    &kp CARET   &kp DOLLAR &kp HOME  &kp END   &kp EQUAL       &trans
&kp LSHFT   &kp A           &kp S  &kp KP_N4  &kp KP_N5  &kp KP_N6                                    &kp LEFT    &kp DOWN   &kp UP    &kp RIGHT &kp LBKT        &kp LBRC
&kp LSHFT   &kp Z           &kp X  &kp KP_N1  &kp KP_N2  &kp KP_N3    &rgb_ug RGB_TOG &rgb_ug RGB_EFF &kp KP_PLUS &kp MINUS  &kp EQUAL &kp LBKT  &kp RBKT        &kp F5
                            &trans &trans     &trans     &trans       &trans          &trans          &trans      &trans     &trans    &trans
            >;

            sensor-bindings = <&encoder_ug_brightness &encoder_ug_hue>;
        };
    };
};
